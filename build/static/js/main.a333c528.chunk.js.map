{"version":3,"sources":["components/Landing/Login.js","firebase.js","AuthContext.js","components/Landing/Signup.js","components/Landing/Landing.js","components/TeamDashboard/TeamStats.js","components/TeamDashboard/TeamDashboard.js","components/Leaderboards/WeeklyBoard.js","components/Leaderboards/MonthlyBoard.js","components/Leaderboards/Leaderboards.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","history","useHistory","submitLogin","a","push","className","onClick","auth","require","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","value","Provider","Signup","useRef","useContext","signup","Landing","to","TeamStats","TeamDashboard","WeeklyBoard","MonthlyBoard","Leaderboards","PrivateRoute","Component","component","rest","render","props","App","Container","style","minHeight","maxWidth","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a333c528.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n\r\n    const submitLogin = async () => {\r\n        // try logging in with auth\r\n        // if it works, take them to team dashboard\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>Login to your mymizu teams account: </h1>\r\n            <button onClick={ submitLogin }>Login</button>\r\n        </div>\r\n    )\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n// const firebase = require(\"firebase\");\r\nconst firebaseui = require(\"firebaseui\");\r\n\r\nconst app = firebase.initializeApp({\r\n\tapiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\r\n\tauthDomain: `${process.env.REACT_APP_AUTHDOMAIN}`,\r\n\tdatabaseURL: `${process.env.REACT_APP_DATABASEURL}`,\r\n\tprojectId: `${process.env.REACT_APP_PROJECT_ID}`,\r\n\tstorageBucket: `${process.env.REACT_APP_STORAGE_BUCKET}`,\r\n\tmessagingSenderId: `${process.env.REACT_APP_MESSAGING_SENDER_ID}`,\r\n\tappId: `${process.env.REACT_APP_APP_ID}`,\r\n\tmeasurementId: `${process.env.REACT_APP_MEASUREMENT_ID}`,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default auth;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { auth } from \"./firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n\treturn useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\tconst [currentUser, setCurrentUser] = useState();\r\n\r\n\tfunction signUp(email, password) {\r\n\t\treturn auth.createUserWithEmailAndPassword(email, password);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = auth.onAuthStateChanged(user => {\r\n\t\t\tsetCurrentUser(user);\r\n\t\t});\r\n\r\n\t\treturn unsubscribe;\r\n\t},[]);\r\n\t\t\r\n\r\n\tconst value = {\r\n\t\tcurrentUser,\r\n\t};\r\n\r\n\treturn <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useAuth } from \"../../AuthContext\";\r\nimport {useHistory} from \"react-dom\"\r\n\r\nexport default function Signup() {\r\n\tconst emailRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\tconst passwordConfirmRef = useRef();\r\n\tconst { signup } = useAuth();\r\n\tconst history = useHistory;\r\n\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n\t\t\treturn setError(\"Passwords do not Match\");\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tsetError(\"\");\r\n\t\t\tsetLoading(true);\r\n\t\t\tawait signup(emailRef.current.value, passwordRef.current.value);\r\n\t\t\thistory.pushState(\"/\");\r\n\t\t} catch {\r\n\t\t\tsetError(\"Failed to create account\");\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <h1>Sign up to make your own mymizu team: </h1>\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\n\r\nexport default function Landing() {\r\n\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <h1> Welcome to mymizu teams! </h1>\r\n            <Link to=\"/login\">Login</Link>\r\n\t\t    <Link to=\"/signup\">Signup</Link>\r\n        </div>\r\n    )\r\n}","export default function TeamStats() {\r\n    return (\r\n        <div className=\"teamstats-container\">\r\n            <h1>How's my team doing? </h1>\r\n        </div>\r\n    )\r\n}","import TeamRegistration from \"./TeamRegistration\";\r\nimport TeamStats from \"./TeamStats\";\r\n\r\nexport default function TeamDashboard() {\r\n\r\n    // need some way to check if current logged in user already is part of a team here\r\n\r\n    const team = true; // just for testing, remove later :)\r\n\r\n    return (\r\n        <div className=\"teamdashboard-container\">\r\n            <h1>Team Dashboard</h1>\r\n            { !team &&\r\n                <TeamRegistration />\r\n            }\r\n            { team &&\r\n                <TeamStats />\r\n            }\r\n        </div>\r\n    )\r\n}","export default function WeeklyBoard() {\r\n    return (\r\n        <div className=\"weeklyboard-container\">\r\n            <h1>Weekly board: </h1>\r\n        </div>\r\n    )\r\n}","export default function MonthlyBoard() {\r\n    return (\r\n        <div className=\"monthlyboard-container\">\r\n            <h1>Monthly board: </h1>\r\n        </div>\r\n    )\r\n}","import WeeklyBoard from \"./WeeklyBoard\";\r\nimport MonthlyBoard from \"./MonthlyBoard\";\r\n\r\nexport default function Leaderboards() {\r\n\r\n    return (\r\n        <div className=\"leaderboards-container\">\r\n            <WeeklyBoard />\r\n            <MonthlyBoard />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    /* TODO: const currentUser = ??? need some way to check auth and find\r\n    current user here\r\n    */\r\n\r\n   const currentUser = true; // just for testing purposes! remove this later :)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\n// import './App.css';\r\nimport Landing from \"./components/Landing/Landing\";\r\nimport Login from \"./components/Landing/Login\";\r\nimport Signup from \"./components/Landing/Signup\";\r\nimport TeamDashboard from \"./components/TeamDashboard/TeamDashboard\";\r\nimport Leaderboards from \"./components/Leaderboards/Leaderboards\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AuthProvider } from \"./AuthContext\";\r\n// const firebase = require(\"firebase\");\r\n// const firebaseui = require(\"firebaseui\");\r\n\r\nexport default function App() {\r\n\t\r\n\t// TODO: set current user after authentication!\r\n\tconst currentUser = true; // just for testing; remove later :)\r\n\r\n\tconst logoutUser = async () => {\r\n\t\t\r\n\t\ttry {\r\n\t\t\t// TODO: logs out currently logged in user\r\n\t\t\t// assuming logout works, redirect to landing:\r\n\t\t\twindow.location = \"/\";\t\t\t\r\n\t\t} catch(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst invalidRoute = () => \"Uh oh! Looks like that page doesn't exist :(\";\r\n\r\n\treturn (\r\n    <Container\r\n\t\t\tclassName=\"d-flex align-items-center justify-content-center\"\r\n\t\t\tstyle={{ minHeight: \"100vh\" }}\r\n\t\t>\r\n\t\t\t<div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<AuthProvider>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t{/* <PrivateRoute exact path=\"/\" component={Dashboard} /> */}\r\n\t\t\t\t\t\t\t{/* <PrivateRoute path=\"/update-profile\" component={UpdateProfile} /> */}\r\n\t\t\t\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n              <Route path=\"/\" exact component={ Landing } />\r\n\r\n\t\t\t\t\t\t\t{/* <Route path=\"/forgot-password\" component={ForgotPassword} /> */}\r\n              <PrivateRoute path=\"/dashboard\" exact component={ TeamDashboard } />\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/leaderboards\" exact component={ Leaderboards } />\r\n\t\t\t\t\t\t\t<Route component={ invalidRoute } />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</AuthProvider>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t\t// <div>\r\n\t\t// <Router>\r\n\t\t// \t\t\t<div className=\"app\">\r\n\t\t// \t\t\t\t\t{ !currentUser &&\r\n\t\t// \t\t\t\t\t\t<nav className=\"main-nav\">\r\n\t\t// \t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t// \t\t\t\t\t\t</nav>\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t\t{ currentUser &&\r\n\t\t// \t\t\t\t\t\t<nav className=\"main-nav\">\r\n\t\t// \t\t\t\t\t\t\t<Link to=\"/dashboard\">Team Dashboard</Link>\r\n\t\t// \t\t\t\t\t\t\t<Link to=\"/leaderboards\">Leaderboards</Link>\r\n\t\t// \t\t\t\t\t\t\t<a href=\"#!\" onClick={ logoutUser }>Logout</a>\r\n\t\t// \t\t\t\t\t\t</nav>\r\n\t\t// \t\t\t\t\t}\t\t\t\t\t\t<Switch>\r\n\t\t// \t\t\t\t\t<Route path=\"/\" exact component={ Landing } />\r\n\t\t// \t\t\t\t\t<Route path=\"/login\" exact component={ Login } />\r\n\t\t// \t\t\t\t\t<Route path=\"/signup\" exact component={ Signup } />\r\n\t\t\t\t\t\t\t\r\n\t\t// \t\t\t\t</Switch>\r\n\t\t// \t\t\t</div>\r\n\t\t// \t\t</Router>\r\n\t\t// </div>\r\n\t);\r\n\t}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"react-bootstrap\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}